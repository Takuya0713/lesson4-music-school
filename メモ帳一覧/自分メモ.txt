【display: grid;などのグリッドレイアウトについて】
https://developer.mozilla.org/ja/docs/Web/CSS/CSS_grid_layout/Basic_concepts_of_grid_layout

gridにすると子要素がコンテナ化される。
コンテナの要素に対してCSSで間隔をあけたり、カラム数を指定できたりする。

【CSSでspanタグを使った縦並びの方法】
https://www.genspark.ai/spark/css%E3%81%A7span%E3%82%BF%E3%82%B0%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E7%B8%A6%E4%B8%A6%E3%81%B3%E3%81%AE%E6%96%B9%E6%B3%95/0ca18345-e993-4232-8084-e643f970e440

display: flex;とflex-direction: column;を組み合わせて使用する。

【リキッドレイアウト解説・GPT】
https://chatgpt.com/c/6814abc5-56bc-8010-8a08-9fc813e4a6a4

・articleタグとasideタグの違い
https://chatgpt.com/c/6827f913-f870-8010-9961-f75d02a87b85
【article】
独立して意味が成り立つコンテンツの事。
例）
・ブログ記事
・ニュース記事
・投稿一覧の1つ1つ
・お知らせ など

【aside】
本文の横にある「補足情報」や「関連情報」に使います。
例）
・関連リンク
・広告
・プロフィール欄
・サイドバー

【使い方】
articleタグに左側の独立コンテンツを配置して、右側のサイドバー部分にasideタグで記述する。
asideタグのみ、各セクションを<section>タグで囲む。

【左右配置】
display:flex;をクラス名のl-mainに適用。
